openapi: 3.0.3
info:
  title: Task Management API
  version: 1.0.0
paths:
  /tasks:
    get:
      summary: タスクの一覧を取得
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [NotStarted, InProgress, Completed]
        - name: name
          in: query
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: sort
          in: query
          schema:
            type: string
            enum: [priority, end_date]
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: "#/components/schemas/Task"
                  total:
                    type: integer
    post:
      summary: タスクを作成
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskInput"
      responses:
        "201":
          description: タスク作成成功
  /tasks/{id}:
    get:
      summary: タスクの詳細を取得
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
    put:
      summary: タスクを更新
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskInput"
      responses:
        "200":
          description: タスク更新成功
    delete:
      summary: タスクを削除
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: タスク削除成功
  /labels:
    get:
      summary: ラベル一覧を取得
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  labels:
                    type: array
                    items:
                      $ref: "#/components/schemas/Label"
    post:
      summary: 新しいラベルを作成
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LabelInput"
      responses:
        "201":
          description: 作成成功

  /labels/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: 指定したIDのラベルを取得
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Label"
    put:
      summary: 指定したIDのラベルを更新
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LabelInput"
      responses:
        "200":
          description: 更新成功
    delete:
      summary: 指定したIDのラベルを削除
      responses:
        "204":
          description: 削除成功

  /tasks/{id}/labels:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    put:
      summary: タスクに関連付けられたラベルを更新
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                label_ids:
                  type: array
                  items:
                    type: integer
      responses:
        "200":
          description: 更新成功

components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        priority:
          type: string
          enum: [High, Middle, Low]
        status:
          type: string
          enum: [NotStarted, InProgress, Completed]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        labels:
          type: array
          items:
            $ref: "#/components/schemas/Label"
    TaskInput:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        priority:
          type: string
          enum: [High, Middle, Low]
        status:
          type: string
          enum: [NotStarted, InProgress, Completed]
    Label:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        color:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    LabelInput:
      type: object
      required:
        - name
        - color
      properties:
        name:
          type: string
        color:
          type: string
